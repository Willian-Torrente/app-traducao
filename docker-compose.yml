services:
  # Serviço da API de Tradução
  api:
    build:
      context: .
      dockerfile: packages/translation-api/Dockerfile
    container_name: translation_api
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=mysecretpassword
      - DB_NAME=translations_db
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672

  # NOVO SERVIÇO: Worker de Tradução
  worker:
    build:
      context: .
      dockerfile: packages/translation-worker/Dockerfile
    container_name: translation_worker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=mysecretpassword
      - DB_NAME=translations_db
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672

  # Serviço do Banco de Dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: translation_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=translations_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d translations_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Serviço do RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
